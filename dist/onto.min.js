/*! onto.js 2014-12-28 */

!function(a,b){"use strict";"function"==typeof define&&define.amd?define(["../dist/Class.min","../dist/Namespace.min","../dist/EventEmitter.min","../dist/ReferenceObject.min","underscore"],b):"object"==typeof exports?module.exports=b(require("../dist/Class.min"),require("../dist/Namespace.min"),require("../dist/EventEmitter.min"),require("../dist/ReferenceObject.min"),require("../dist/underscore")):a.Onto=b(a.Class,a.Namespace,a.EventEmitter,a.ReferenceObject,a._)}(this,function(a,b,c,d,e){"use strict";if("undefined"==typeof f)var f=e;var g=new b("Onto",null,{Class:a,EventEmitter:c,Namespace:b,ReferenceObject:d,_:e||f});!function(){var a=function(a,b,c){return a=a||0,b=b||1,c=c!==!1,function(){return c?Math.floor(Math.random()*(b-a+1))+a:Math.random()*(b-a)+a}},c={random:a},d=c.defaults={numberOfDie:1,typeOfDie:6,modifier:0},e=c.roll=function(b,c,e){b=b||d.numberOfDie,c=c||d.typeOfDie,e=e||d.modifier;for(var f={multiple:b,typeOfDie:c,modifier:e,rolls:[],value:0},g=1;b+1>g;++g){var h=a(1,c)();f.rolls.push(h),f.value+=h}return f.value+=e,f.toString=function(a){return f.value.toString(a||10)},f.valueOf=function(){return f.value},f};c.d=function(a){return e(1,a)};c.createRoll=function(a,b,e){return a=a||d.numberOfDie,b=b||d.typeOfDie,e=e||d.modifier,function(){return c.roll(a,b,e)}},c.parseString=function(a){if(a&&a.indexOf("d")>-1){var b=a.split("d"),d=b[0];b=b[1];var e=0;if(b.indexOf("m")>-1&&(e=b.split("m"),b=e[0],e=e.length>1?e[1]:0),d=parseInt(d.toString()),b=parseInt(b.toString()),e=parseInt(e.toString()),isNaN(d))throw new Error("The number of dice is not a number!");if(isNaN(b))throw new Error("The type of dice is not a number!");if(isNaN(e))throw new Error("The modifier is not a number!");return c.roll(d,b,e)}throw new Error("parseString() usage: pass the number of dice, type of dice, and modifier like so: 2d6m-8\nexample: parseString('2d6m-8') or parseString('3d6')")},c.test=function(a,b){b=b||100;for(var d={},e=0;e<a.length;++e){if(3!==a[e].length)throw new Error("test() usage: pass an array with subarrays, each containing the number of dice, type of dice, and modifier like so: [[3, 6, 0], [1, 10, 2]]");console.time("Dice");var f=a[e][0],g=a[e][1],h=a[e][2];console.log("Iterating "+b+" times over "+f+"d"+g+"+"+h);for(var i=0;b>i;++i){var j=c.roll(f,g,h);d[j.value.toString()]||(d[j.value.toString()]=0),++d[j.value.toString()]}console.log(JSON.stringify(d)),d={},console.timeEnd("Dice")}},new b("Dice",g,c)}();var h=new a({inherits:g.Body,init:function(a){a=a||{}}});g.addClass("Item",h);var i=new a({inherits:g.Item,init:function(a){a=a||{}},attachItem:{value:function(){}},ParentContainer:null,Container:null});g.addClass("Inventory",i);var j=new a({init:function(a){a=a||{}},Value:a(0).Enumerable().Writable(),Blunt:a(0).Enumerable().Writable(),Cut:a(0).Enumerable().Writable(),Burn:a(0).Enumerable().Writable(),Pierce:a(0).Enumerable().Writable(),Freeze:a(0).Enumerable().Writable(),Poison:a(0).Enumerable().Writable()});g.addClass("Armor",j),g.addNamespace(new b("Damage")),function(){var b=new a({isAbstract:!0,init:function(a,b,c){var d=this;d.Value=a||0,d.Shard=b||null,d.Timestamp=c||(new Date).getTime()},Value:a(0).Enumerable().Writable(),Shard:a(null).Enumerable().Writable(),Timestamp:a(0).Enumerable().Writable(),DamageType:a("").Enumerable().Writable()});b.Types=["Blunt","Cut","Burn","Pierce","Freeze","Poison"],g.Damage.addClass("Damage",b);for(var c=0;c<b.Types.length;++c){var d=b.Types[c];!function(c){var d=new a({inherits:b,init:function e(a,b,d){e["super"].call(this,a,b,d),this.DamageType=c}});g.Damage.addClass(c,d)}(d)}}(),g.addNamespace(new b("Weapon")),function(){var b=function(){return new g.Damage.Blunt(g.Dice.roll(1,3).value)},c=new a({isAbstract:!0,init:function(){var a=this;a.Attack.Bash=b},Attack:a({}).Enumerable(),CriticalMultiplier:a(1.5).Enumerable().Writable(),Material:a(null).Enumerable(),Weight:a(0).Enumerable()});g.Weapon.addClass("Weapon",c);var d=new a({isAbstract:!0,inherits:g.Weapon,init:function f(a){var b=this;f["super"].call(b,a),b.MaxRange=10*b.RangeIncrement,b.Attack.Shoot=function(a){if(a&&a.Count){--a.Count;var b=dice.roll(1,8,0).value;return a.Damage(b)}throw new Error("That ammunition type is incorrect!")}},RangeIncrement:20,MaxRange:100});g.Weapon.addClass("RangedWeapon",d);var e=new a({isAbstract:!0,inherits:g.Weapon.RangedWeapon,init:function h(a){var b=this;h["super"].call(b,a),b.MaxRange=5*this.RangeIncrement,b.Attack.Throw=function(){var a=dice.roll(1,4,0).value;return new Damage.Blunt.Class(a)}}});g.Weapon.addClass("ThrownWeapon",e)}(),g.addNamespace(new b("Skill"));var k=new a({init:function(b,c,d,e){var f=this,g=c;e=e||0;var h=b.split(".").reverse();a.define(f,"namePath",a(b).Enumerable()),a.define(f,"value",{get:function(){return g},enumerable:!0}),a.define(f,"valueOf",a(function(){return g})),a.define(f,"useCount",a(e).Enumerable().Writable()),a.define(f,"description",a(d||"The general skill of "+h.join(" ").toLowerCase()).Enumerable()),a.define(f,"increment",a(function(){++g}))}});g.Skill.addClass("Specialization",k),function(){var a={loadDefaults:function(){var a={},b=g.Skill.Specialization;return a.Firearms=new b("Firearms",-10,"The general skill of using all firearm weapons"),a["Firearms.Pistol"]=new b("Firearms.Pistol",-10,"The general skill of using all pistols"),a["Firearms.Pistol.Pipe"]=new b("Firearms.Pistol.Pipe",-5,"The general skill of using all makeshift pistols"),a["Firearms.SMG"]=new b("Firearms.SMG",-15,"The general skill of using all submachine guns"),a["Firearms.Rifle"]=new b("Firearms.Rifle",-5,"The general skill of using all rifles"),a["Firearms.MG"]=new b("Firearms.MG",-15,"The general skill of using all large mounted machine guns"),a.Archery=new b("Archery",-10,"The general skill of using all tension-propelled weapons for archery"),a["Archery.Bow"]=new b("Archery.Bow",-10,"The general skill of using all bow weapons for archery"),a["Archery.Crossbow"]=new b("Archery.Crossbow",-5,"The general skill of using all crossbow weapons for archery"),a.Explosives=new b("Explosives",-20,"The general skill of using all explosives"),a.Melee=new b("Melee",0,"The general skill of using all hand-to-hand weapons, including brass knuckles, legs, fists, heads, etc."),a["Melee.Shield"]=new b("Melee.Shield",-10,"The general skill of using handheld shields as weapons"),a["Melee.Spear"]=new b("Melee.Spear",-15,"The general skill of using spears in hand-to-hand combat"),a["Melee.Knife"]=new b("Melee.Knife",-5,"The general skill of using knives in hand-to-hand combat"),a["Melee.Sword"]=new b("Melee.Sword",-10,"The general skill of using swords in hand-to-hand combat"),a["Melee.Axe"]=new b("Melee.Axe",-15,"The general skill of using axes in hand-to-hand combat"),a["Melee.Hammer"]=new b("Melee.Hammer",-10,"The general skill of using hammers in hand-to-hand combat"),a["Melee.KungFu"]=new b("Melee.KungFu",-35,"The general skill of successfully using techniques in the discipline of kung fu"),a.Throwing=new b("Throwing",0,"The general skill of throwing things"),a["Throwing.Spear"]=new b("Throwing.Spear",-20,"The general skill of throwing spears"),a["Throwing.Knife"]=new b("Throwing.Knife",-10,"The general skill of throwing knives"),a["Throwing.Axe"]=new b("Throwing.Axe",-20,"The general skill of throwing axes"),a.Lockpick=new b("Lockpick",0,"The general skill of using tools to open locks without a key"),a.Mechanics=new b("Mechanics",0,"The general skill of using and repairing machinery or working parts of something"),a["Mechanics.Combustion"]=new b("Mechanics.Combustion",-10,"The general skill of using and repairing machinery and tools that use fuel combustion power"),a["Mechanics.Combustion.Coal"]=new b("Mechanics.Combustion.Coal",-10,"The general skill of using and repairing machinery and tools that use coal for fuel combustion power"),a["Mechanics.Combustion.Hydrocarbon"]=new b("Mechanics.Combustion.Hydrocarbon",-20,"The general skill of using and repairing machinery and tools that use gasoline or diesel for fuel combustion power"),a["Mechanics.Hydraulic"]=new b("Mechanics.Hydraulic",-20,"The general skill of using and repairing machinery and tools that use liquid fluid power to do simple work"),a.Medicine=new b("Medicine",0,"The general skill of help given to a sick or injured person"),a["Medicine.FirstAid"]=new b("Medicine.FirstAid",-5,"The general skill of help given to a sick or injured person until full medical treatment is available"),a.Science=new b("Science",0,"the intellectual and practical activity encompassing the systematic study of the structure and behavior of the physical and natural world through observation and experiment"),a["Science.Botany"]=new b("Science.Botany",-10,"The general skill of working with plants"),a["Science.Mineral"]=new b("Science.Mineral",-15,"The general skill of working with minerals"),a["Science.Electronic"]=new b("Science.Electronic",-20,"The general skill of working with electronic devices"),a["Science.Computer"]=new b("Science.Computer",-10,"The general skill of working with computers"),a["Science.Computer.Programming"]=new b("Science.Computer.Programming",-20,"The general skill of working with computer software"),a["Science.Physics"]=new b("Science.Physics",-10,"The general skill of working with energy and matter using the scientific method"),a["Science.Physics.Optical"]=new b("Science.Physics.Optical",-25,"The general skill of working with light"),a["Science.Physics.Particle"]=new b("Science.Physics.Particle",-35,"The general skill of working with particles"),a["Science.Physics.Astro"]=new b("Science.Physics.Astro",-50,"The general skill of planetary bodies"),a["Science.Rocket"]=new b("Science.Rocket",-50,"The general skill of building rockets"),a.Craftsmanship=new b("Craftsmanship",0,"The general skill of making things"),a["Craftsmanship.Shipbuilding"]=new b("Craftsmanship.Shipbuilding",-20,"The general skill of making boats"),a["Craftsmanship.Leathersmithing"]=new b("Craftsmanship.Leathersmithing",0,"The general skill of making things from leather"),a["Craftsmanship.Gemsmithing"]=new b("Craftsmanship.Gemsmithing",-25,"The general skill of making things from gems"),a["Craftsmanship.Metalsmithing"]=new b("Craftsmanship.Metalsmithing",-10,"The general skill of making things from metals"),a["Craftsmanship.Metalsmithing.Blacksmithing"]=new b("Craftsmanship.Metalsmithing.Blacksmithing",-10,"The general skill of making things from iron and steel"),a["Craftsmanship.Metalsmithing.Goldsmithing"]=new b("Craftsmanship.Metalsmithing.Goldsmithing",-20,"The general skill of making things from gold"),a["Craftsmanship.Metalsmithing.Silversmithing"]=new b("Craftsmanship.Metalsmithing.Silversmithing",-15,"The general skill of making things from silver"),a["Craftsmanship.Furrier"]=new b("Craftsmanship.Furrier",-5,"The general skill of making clothes from animal fur"),a["Craftsmanship.Dyeing"]=new b("Craftsmanship.Dyeing",0,"The general skill of dyeing cloth different colors"),a["Craftsmanship.Gunsmithing"]=new b("Craftsmanship.Gunsmithing",-20,"The general skill of making guns"),a["Craftsmanship.Locksmithing"]=new b("Craftsmanship.Locksmithing",-20,"The general skill of making locks"),a["Craftsmanship.Pottersmithing"]=new b("Craftsmanship.Pottersmithing",-5,"The general skill of making things from clay"),a["Craftsmanship.Stonemasonry"]=new b("Craftsmanship.Stonemasonry",-10,"The general skill of making things from stone"),a["Craftsmanship.Weaving"]=new b("Craftsmanship.Weaving",-5,"The general skill of making things from thread"),a["Craftsmanship.Weaving.Ropesmithing"]=new b("Craftsmanship.Weaving.Ropesmithing",-5,"The general skill of making rope"),a["Craftsmanship.Carpentry"]=new b("Craftsmanship.Carpentry",0,"The general skill of building things with wood"),a["Craftsmanship.Carpentry.Coopersmithing"]=new b("Craftsmanship.Carpentry.Coopersmithing",-5,"The general skill of making barrels"),a.Stealth=new b("Stealth",-10,"The general skill of being undetected"),a["Stealth.Steal"]=new b("Stealth.Steal",-10,"The general skill of taking things undetected"),a["Stealth.Sneak"]=new b("Stealth.Sneak",-5,"The general skill of sneaking around undetected"),a.Survival=new b("Survival",0,"The general skill of surviving on outdoors"),a["Survival.Forest"]=new b("Survival.Forest",-5,"The general skill of surviving in forests"),a["Survival.Desert"]=new b("Survival.Desert",-20,"The general skill of surviving in deserts"),a["Survival.Island"]=new b("Survival.Island",-30,"The general skill of surviving on islands"),a["Survival.Mountain"]=new b("Survival.Mountain",-5,"The general skill of surviving on mountains"),a.Gambling=new b("Gambling",0,"The general skill of gambling"),a["Gambling.Cards"]=new b("Gambling.Cards",-10,"The general skill of gambling with cards"),a["Gambling.Roulette"]=new b("Gambling.Roulette",-20,"The general skill of gambling with a roulette wheel"),a.Speech=new b("Speech",0,"The general skill of moving others with speech"),a["Speech.Persuasion"]=new b("Speech.Persuasion",-10,"The general skill of persuading others"),a["Speech.Barter"]=new b("Speech.Barter",0,"The general skill of negotiating a better price"),a.Piloting=new b("Piloting",0,"The general skill of piloting powered vehicles"),a["Piloting.Boat"]=new b("Piloting.Boat",-10,"The general skill of piloting water vessels"),a["Piloting.Aircraft"]=new b("Piloting.Aircraft",-30,"The general skill of flying aircraft"),a["Piloting.Automobile"]=new b("Piloting.Automobile",-5,"The general skill of driving cars"),a.Athletics=new b("Athletics",0,"The general skill of being physically fit"),a["Athletics.Jump"]=new b("Athletics.Jump",-5,"The general skill of jumping when it counts"),a["Athletics.Climb"]=new b("Athletics.Climb",-10,"The general skill of climbing things"),a["Athletics.Ride"]=new b("Athletics.Ride",-10,"The general skill of riding animals"),a["Athletics.Swim"]=new b("Athletics.Swim",-20,"The general skill of swimming"),a.History=new b("History",0,"The general skill of knowing things"),a}};new b("Specializations",g.Skill,a)}();var l=new a({init:function(b){var c=this;b=b||{};var d={Perception:9,Luck:9},e=g._.extend(c.Attributes||d,b.Attributes||d);a.define(c,"Attributes",a({}).Enumerable());for(var f in e)a.define(c.Attributes,f,a(e[f]).Enumerable());a.define(c,"Power",{get:function(){return c.Attributes.Perception+c.Attributes.Luck},enumerable:!0})},Power:null});g.addClass("Soul",l);var m=new a({inherits:g.Soul,init:function s(b){var c=this;b=b||{};var d={Charisma:9,Intelligence:9};b.Attributes=g._.extend(c.Attributes||d,b.Attributes||d),s["super"].call(c,b),a.define(c,"Chi",{get:function(){return c.Attributes.Luck/2+c.Attributes.Perception+c.Attributes.Intelligence/2},enumerable:!0})},Chi:null});g.addClass("Spirit",m);var n=new a({isAbstract:!0,init:function(b){var c=this;b=b||{},a.define(c,"Size",{get:function(){throw new Error("Size must be overridden")},enumerable:!0,configurable:!0}),a.define(c,"HitPoints",{get:function(){throw new Error("HitPoints must be overridden")},enumerable:!0,configurable:!0}),a.define(c,"CurrentDamage",{get:function(){var a=0;for(var b in c.HitLocations)for(var d=0;d<c.HitLocations[b].Wounds.length;++d)a+=c.HitLocations[b].Wounds[d].Value;return a},enumerable:!0}),a.define(c,"Damage",{value:function(a,b){var d=null,e=a.Value;for(var f in c.Inventory[b])c.Inventory[b][f]&&c.Inventory[b][f].Armor&&(d=c.Inventory[b][f].Armor,Wound.Value-=(d[a.DamageType]||0)*(d.Value||0));a.Value<1?a=null:e/2>a.Value&&(a.DamageType="Blunt",a.Shard=null),a&&c.HitLocations[b].Wounds.push(a)},enumerable:!0}),a.define(c,"LoadBodyDefinition",a(function(a){var b=0,d=0;for(var e in a.Locations)!function(e){var f=a.Locations[e];for(c.HitLocations[e]=f,c.Inventory[e]=f.InventorySlots;b<d+f.Percentage;++b)c.LocationLookup[b.toString()]=e;d=b}(e)})),a.define(c,"HitLocations",a(b.HitLocations||{}).Enumerable()),a.define(c,"LocationLookup",a({})),a.define(c,"LookupLocation",a(function(a){var b=c.LocationLookup[a.toString()];return c.HitLocations[b]}))}});g.addClass("Body",n);var o=new a({inherits:g.Body,isAbstract:!0,init:function t(b){var c=this;b=b||{};var d={Strength:9,Endurance:9,Agility:9};b.Attributes=g._.extend(d,b.Attributes||{}),b.HitLocations=g._.extend(this.HitLocations||{},b.HitLocations||{}),b.Inventory=g._.extend(this.Inventory||{},b.Inventory||{}),t["super"].call(c,b),a.define(c,"Attributes",a({}).Enumerable());var e=new g.Spirit(b);for(var f in e.Attributes)a.define(c.Attributes,f,a(e.Attributes[f].valueOf()).Enumerable());a.define(c,"Chi",a(e.Chi).Enumerable()),a.define(c,"Power",a(e.Power).Enumerable()),a.define(c,"Age",a(b.Age||18).Writable().Enumerable()),this.Gender=b.Gender||"Male",this.Name=b.Name,a.define(c,"Size",{get:function(){return(c.Attributes.Strength+c.Attributes.Endurance)/2},enumerable:!0}),a.define(c,"HitPoints",{get:function(){return 15+c.Attributes.Strength+2*c.Attributes.Endurance},enumerable:!0}),a.define(c,"MovementSpeed",{get:function(){return Math.max(1+c.Attributes.Agility-c.CurrentDamage,0)},enumerable:!0}),a.define(c,"AttackSpeed",{get:function(){return Math.max(20-c.Attributes.Agility+c.CurrentDamage,1)},enumerable:!0}),a.define(c,"MaxCarryWeight",{get:function(){return 12*c.Attributes.Strength},enumerable:!0}),a.define(c,"Inventory",a(b.Inventory).Enumerable().Writable())}});g.addClass("Being",o);var p=new a({inherits:g.Being,init:function u(b,c){var d=this;c=c||{},c.Attributes=g._.extend(d.Attributes||{},c.Attributes||{}),c.Specializations=c.Specializations||{},c.HitLocations=c.HitLocations||{},c.Inventory=c.Inventory||{},c.Name=b,u["super"].call(d,c),a.define(d,"Skills",a({}).Enumerable());var e={Firearms:function(){return d.Attributes.Agility+10},Archery:function(){return 2+2*d.Attributes.Agility+d.Attributes.Strength/2},Explosives:function(){return 2+2*d.Attributes.Perception+d.Attributes.Luck/2},Melee:function(){return 30+2*d.Attributes.Agility+2*d.Attributes.Strength},Throwing:function(){return 3*d.Attributes.Agility+d.Attributes.Strength/2},Lockpick:function(){return 20+d.Attributes.Perception/2+d.Attributes.Agility/2},Mechanics:function(){return 20+d.Attributes.Intelligence},Medicine:function(){return d.Attributes.Perception+2*d.Attributes.Intelligence+d.Attributes.Luck/2},Science:function(){return d.Attributes.Perception+2*d.Attributes.Intelligence+d.Attributes.Luck/2},Craftsmanship:function(){return d.Attributes.Intelligence/2+d.Attributes.Luck/2+d.Attributes.Perception/2+d.Attributes.Agility/2},Stealth:function(){return 2+2*d.Attributes.Agility+d.Attributes.Luck/2},Survival:function(){return 2+d.Attributes.Endurance+d.Attributes.Intelligence+d.Attributes.Luck/2},Gambling:function(){return 2+2*d.Attributes.Perception+d.Attributes.Luck/2},Speech:function(){return 2+2*d.Attributes.Charisma+d.Attributes.Luck/2},Athletics:function(){return 2+d.Attributes.Agility+d.Attributes.Strength+d.Attributes.Endurance/2},Piloting:function(){return 2*(d.Attributes.Agility+d.Attributes.Perception)},History:function(){return 2+2*d.Attributes.Intelligence+d.Attributes.Perception/2}};for(var f in e)a.define(d.Skills,f,{get:e[f],enumerable:!0});var h=g.Skill.Specializations.loadDefaults();a.define(d,"Specializations",a(h).Enumerable()),d.LoadBodyDefinition({Locations:{Head:{DisplayName:"Head",Health:null,Percentage:5,InventorySlots:{Hat:null,EyeWear:null,EarWear:null,MouthWear:null,NeckWear:null},Wounds:[]},RightArm:{DisplayName:"Right Arm",Health:null,Percentage:10,InventorySlots:{ShoulderWear:null,UpperMidWear:null,ElbowWear:null,LowerMidWear:null,WristWear:null,Gloves:null},Wounds:[]},Chest:{DisplayName:"Chest",Health:null,Percentage:25,InventorySlots:{CollarWear:null,LeftBreastWear:null,RightBreastWear:null,BackWear:null},Wounds:[]},LeftArm:{DisplayName:"Left Arm",Health:null,Percentage:10,InventorySlots:{ShoulderWear:null,UpperMidWear:null,ElbowWear:null,LowerMidWear:null,WristWear:null,Gloves:null},Wounds:[]},Abdomen:{DisplayName:"Abdomen",Health:null,Percentage:20,InventorySlots:{PlexusWear:null,BellyWear:null,Belt:null,GroinWear:null},Wounds:[]},RightLeg:{DisplayName:"Right Leg",Health:null,Percentage:15,InventorySlots:{HipWear:null,UpperMidWear:null,KneeWear:null,LowerMidWear:null,AnkleWear:null,Feet:null},Wounds:[]},LeftLeg:{DisplayName:"Left Leg",Health:null,Percentage:15,InventorySlots:{HipWear:null,UpperMidWear:null,KneeWear:null,LowerMidWear:null,AnkleWear:null,Feet:null},Wounds:[]}}}),a.define(d.HitLocations.Head,"Health",{get:function(){return Math.round(d.HitPoints/5)}}),a.define(d.HitLocations.RightArm,"Health",{get:function(){return Math.round(d.HitPoints/4)}}),a.define(d.HitLocations.Chest,"Health",{get:function(){return Math.round(d.HitPoints/2)}}),a.define(d.HitLocations.LeftArm,"Health",{get:function(){return Math.round(d.HitPoints/4)}}),a.define(d.HitLocations.Abdomen,"Health",{get:function(){return Math.round(d.HitPoints/3)}}),a.define(d.HitLocations.RightLeg,"Health",{get:function(){return Math.round(d.HitPoints/3)}}),a.define(d.HitLocations.LeftLeg,"Health",{get:function(){return Math.round(d.HitPoints/3)}})},Age:0,Gender:"",Name:"",CurrentDamage:null,Damage:null,Size:null,HitPoints:null,MovementSpeed:null,AttackSpeed:null,MaxCarryWeight:null,Skill:function(a){var b=this,c=a.split("."),d=c[0],e=b.Skills[d],f=0;if(f+=e,c.length>1)for(var g=[d],h=1;h<c.length;++h){var i=!1,j=b.Specializations[g.join(".")];if(j?(f+=j.value,g.push(c[h])):i=!0,i)break}return f},Skills:{},Specializations:{}});g.addClass("Humanoid",p);var q=new a({init:function(){var a=this;this.Characters=function(){for(var a=Storage.getCharacters(),b=0;b<a.length;++b){for(var c=a[b],d=new Character(c.Name,c),e=0;e<d.SaveGames.length;++e){var f=d.SaveGames[e],g=new r(d);g.bind(f),d.SaveGames[e]=g}a[b]=d}return a},this.Character=Character,this.GameSession=r,this.save=function(){for(var a=this.Characters(),b=0;b<a.length;++b)a[b].save()},this.saveCharacters=function(a){Storage.saveCharacters(a)},this.removeCharacter=function(b){var c=[];switch(typeof b){case"number":c=this.Characters(),b<c.length&&a.removeCharacter(c[b].GUID);break;case"string":c=this.Characters();for(var d=0;d<c.length;++d)if(c[d].GUID==b){var e=c[d];if(e){Storage.removeCharacter(e.GUID),c.splice(d,1),Storage.saveCharacters(c);break}}break;case"object":a.removeCharacter(b.GUID)}},this.reset=function(){resetAll()},this.getSaveGame=Storage.getSaveGame}});g.addClass("CharacterManager",q);var r=function(a){this.Character=a,this.GUID=Utility.GUID(),this.DateCreated=(new Date).getTime(),this.DateModified=null,this.bind=Utility.bind,this.update=function(){this.Character.save(),this.DateModified=(new Date).getTime(),Storage.saveGame(this)},this.saveNew=function(){var a=new r(this.Character);a.bind(JSON.parse(JSON.stringify(this))),a.update()}};return g.addClass("GameSession",r),g});
//# sourceMappingURL=onto.min.js.map